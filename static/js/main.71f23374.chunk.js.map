{"version":3,"sources":["images/walletIcon.png","serviceWorker.js","actions/index.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","users.js","pages/Login.js","services/serviceAPI.js","Componentes/FormAddWallet.js","services/propsReduxForm.js","Componentes/HeaderWallet.js","Componentes/TableWallet.js","pages/Wallet.js","pages/NoPage.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","edition","id","status","type","INITIAL_STATE_USER","email","user","state","action","value","INICIAL_STATE_WALLET","statusEdition","idEdition","currencies","expenses","wallet","filter","item","map","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","users","password","Login","props","validEmail","bind","validPassword","updateState","updateStatus","this","bool","setState","final","includes","slice","indexOf","length","event","target","name","saveMail","some","alert","push","className","to","disabled","onClick","handleClickGo","data-testid","placeholder","onChange","renderBtns","forgotPassword","src","walletIcon","alt","renderHeader","renderLogin","React","Component","connect","dispatch","listCurrencies","a","fetch","requestFeth","json","requestJSON","FormAddWallet","updateCurrencies","handleButton","updateEdit","IN_STATE","description","currency","method","tag","editingState","setCurrencies","request","USDT","Object","keys","reduce","finalArray","currentValue","listExpenses","expenseEdit","find","expense","saveData","nextId","saveDataEdited","htmlFor","key","renderValueInput","renderCurrencyInput","renderMethodInput","renderTagInput","renderDescriptionInput","handleButtonEdit","renderEdit","renderForm","_lastValue","dataObj","then","response","resJson","exchangeRates","expenseObj","editExpense","array","HeaderWallet","total","Number","ask","toFixed","sunTotal","TableWallet","del","edit","renderExpense","renderTitleTable","renderLinesTable","Wallet","NoPage","App","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.71f23374.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/walletIcon.24f91bcd.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const LOGIN = 'LOGIN';\nexport const SAVE = 'SAVE';\nexport const DEL = 'DEL';\nexport const EDIT = 'EDIT';\nexport const EDITION = 'EDITION';\nexport const SET_CURRENCIES = 'SET_CURRENCIES';\n\nexport const saveEmail = (email) => ({\n  type: LOGIN,\n  value: email,\n});\n\nexport const saveExpense = (expenseObj) => ({\n  type: SAVE,\n  value: expenseObj,\n});\n\nexport const delExpense = (id) => ({\n  type: DEL,\n  value: id,\n});\n\nexport const editExpense = (id, expenseObj) => ({\n  type: EDIT,\n  id,\n  value: expenseObj,\n});\n\nexport const edition = (id = '', status) => ({\n  type: EDITION,\n  id,\n  status,\n});\n\nexport const setCurrencies = (currencies) => ({\n  type: SET_CURRENCIES,\n  currencies,\n});\n\nexport const constructObj = (dataObj) => (dispatch) => {\n  fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((response) => response.json())\n    .then((resJson) => {\n      dispatch(saveExpense({ ...dataObj, exchangeRates: { ...resJson } }));\n    });\n};\n","import { LOGIN } from '../actions';\n\nconst INITIAL_STATE_USER = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE_USER, action) => {\n  if (action.type === LOGIN) return { email: action.value };\n  return state;\n};\n\nexport default user;\n","import { SAVE, DEL, EDIT, EDITION, SET_CURRENCIES } from '../actions';\n\nconst INICIAL_STATE_WALLET = {\n  statusEdition: false,\n  idEdition: '',\n  currencies: [],\n  expenses: [],\n};\n\nconst wallet = (state = INICIAL_STATE_WALLET, action) => {\n  switch (action.type) {\n  case SET_CURRENCIES:\n    return ({ ...state, currencies: action.currencies });\n  case SAVE:\n    return ({ ...state, expenses: [...state.expenses, action.value] });\n  case DEL:\n    return ({\n      ...state,\n      expenses: [...state.expenses.filter((item) => item.id !== action.value)],\n    });\n  case EDITION:\n    return ({\n      ...state,\n      statusEdition: action.status,\n      idEdition: action.id,\n    });\n  case EDIT:\n    return ({\n      ...state,\n      expenses: [...state.expenses.map((item) => {\n        if (item.id === action.id) return action.value;\n        return item;\n      })],\n    });\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst reducer = combineReducers({ user, wallet });\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","export const users = [\n  {\n    email: 'rafaelazevedo321@gmail.com',\n    password: '62178177',\n  },\n  {\n    email: 'larissabiato@gmail.com',\n    password: '12345678',\n  },\n];\n\nexport const addUser = (user) => users.push(user);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { saveEmail } from '../actions';\nimport '../styles/login.css';\nimport { users, addUser } from '../users';\nimport walletIcon from '../images/walletIcon.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validEmail = this.validEmail.bind(this);\n    this.validPassword = this.validPassword.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.updateStatus = this.updateStatus.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      status: true,\n    };\n  }\n\n  componentDidUpdate() {\n    const { email, password, status } = this.state;\n    if (status) {\n      if (this.validEmail(email) && this.validPassword(password)) {\n        return this.updateStatus(false);\n      }\n    } else if (!this.validEmail(email) || !this.validPassword(password)) {\n      return this.updateStatus(true);\n    }\n  }\n\n  updateStatus(bool) {\n    this.setState((state) => ({ ...state, status: bool }));\n  }\n\n  validEmail(email) {\n    const one = 1;\n    const five = 5;\n    let user = '';\n    let final = '';\n    if (email.includes('@') && email.includes('.com')) {\n      user = (email.slice(0, email.indexOf('@')));\n      final = (email.slice(email.indexOf('@') + one));\n    }\n    if (user.length >= one && final.length >= five) return true;\n    return false;\n  }\n\n  validPassword(password) {\n    const six = 6;\n    if (password.length >= six) return true;\n    return false;\n  }\n\n  updateState(event) {\n    const { name, value } = event.target;\n    this.setState((state) => ({ ...state, [name]: value }));\n  }\n\n  handleClickGo(type) {\n    const { email, password } = this.state;\n    const { saveMail } = this.props;\n    if (type === 'enter') {\n      if (users.some((user) => user.email === email && user.password === password)) {\n        saveMail(email);\n      } else alert('Email or Password invalid !');  \n    } else {\n      addUser({ email, password });\n      saveMail(email);\n    }\n  }\n\n  forgotPassword() {\n    const { email } = this.state;\n    if (this.validEmail(email)) alert(`Password sent for ${ email }`);\n    else alert('Insert email valid');\n  }\n\n  renderBtns() {\n    const { status } = this.state;\n    return (\n      <div className=\"container-btns-login\">\n        <Link to=\"/wallet\">\n          <button\n            className=\"btn-enter\"\n            disabled={ status }\n            onClick={ () => this.handleClickGo('enter') }\n            type=\"button\"\n          >\n            Enter\n          </button>\n        </Link>\n        <Link to=\"/wallet\">\n          <button\n            type=\"button\"\n            className=\"btn-enter\"\n            disabled={ status }\n            onClick={ () => this.handleClickGo('register') }\n          >\n            Register\n          </button>\n        </Link>\n      </div>\n    );\n  }\n\n  renderLogin() {\n    return (\n      <div className=\"container-center\">\n        <div className=\"container-login\">\n          <h1>$ Login $</h1>\n          <input\n            name=\"email\"\n            type=\"text\"\n            data-testid=\"email-input\"\n            placeholder=\"Email\"\n            onChange={ this.updateState }\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            data-testid=\"password-input\"\n            placeholder=\"Password\"\n            onChange={ this.updateState }\n          />\n          { this.renderBtns() }\n          <button\n            type=\"button\"\n            onClick={ () => this.forgotPassword() }\n            className=\"btn-forgot\"\n          >\n            Forgot password ?\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className=\"container-headerLogin\">\n        <img className=\"img-walletIcon\" src={ walletIcon } alt=\"walletIcon\" />\n        <h1>Exchange Wallet</h1>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        { this.renderHeader() }\n        { this.renderLogin() }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveMail: (value) => dispatch(saveEmail(value)),\n});\n\nLogin.propTypes = {\n  saveMail: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","const listCurrencies = async () => {\n  const requestFeth = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const requestJSON = await requestFeth.json();\n\n  return requestJSON;\n};\n\nexport default listCurrencies;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport listCurrencies from '../services/serviceAPI';\nimport { mapStateToProps, mapDispatchToProps } from '../services/propsReduxForm';\n\nclass FormAddWallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateState = this.updateState.bind(this);\n    this.updateCurrencies = this.updateCurrencies.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.updateEdit = this.updateEdit.bind(this);\n\n    this.IN_STATE = { value: '', description: '', currency: '', method: '', tag: '' };\n\n    this.state = {\n      editingState: false,\n      expenses: { value: '', description: '', currency: '', method: '', tag: '' },\n    };\n  }\n\n  componentDidMount() {\n    this.updateCurrencies();\n  }\n\n  async updateCurrencies() {\n    const { setCurrencies } = this.props;\n    const request = await listCurrencies();\n    delete request.USDT;\n    setCurrencies(Object.keys(request).reduce((finalArray, currentValue) => {\n      finalArray.push(currentValue);\n      return finalArray;\n    }, []));\n  }\n\n  updateState(event) {\n    const { name, value } = event.target;\n    this.setState(\n      (state) => ({ ...state, expenses: { ...state.expenses, [name]: value } }),\n    );\n  }\n\n  updateEdit() {\n    const { listExpenses, idEdition } = this.props;\n    const expenseEdit = { ...listExpenses.find((expense) => expense.id === idEdition) };\n    this.setState(\n      (state) => ({ ...state, editingState: true, expenses: expenseEdit }),\n    );\n  }\n\n  handleButton() {\n    const { expenses } = this.state;\n    const { value, currency } = expenses;\n    if (value === '' || currency === '') {\n      alert('VALUE or CURRENCY not insert. Check !!!');\n    } else {\n      const { saveData, nextId } = this.props;\n      saveData({ id: nextId, ...expenses });\n      this.setState((state) => ({ ...state, expenses: this.IN_STATE }));\n    }\n  }\n\n  handleButtonEdit() {\n    const { expenses } = this.state;\n    const { value, currency } = expenses;\n    const { saveDataEdited, edition, idEdition } = this.props;\n    if (value === '' || currency === '') {\n      alert('VALUE or CURRENCY not insert. Check !!!');\n    } else {\n      saveDataEdited(idEdition, expenses);\n      edition(false);\n      this.setState(\n        (state) => ({ ...state, editingState: false, expenses: this.IN_STATE }),\n      );\n    }\n  }\n\n  renderValueInput() {\n    const { expenses } = this.state;\n    const { value } = expenses;\n    return (\n      <label htmlFor=\"valueInput\">\n        { 'Value '}\n        <input\n          value={ value }\n          id=\"valueInput\"\n          type=\"number\"\n          data-testid=\"value-input\"\n          name=\"value\"\n          onChange={ this.updateState }\n        />\n      </label>\n    );\n  }\n\n  renderCurrencyInput() {\n    const { expenses } = this.state;\n    const { currency } = expenses;\n    const { currencies } = this.props;\n    return (\n      <label htmlFor=\"currencyInput\">\n        { 'Currency '}\n        <select\n          value={ currency }\n          id=\"currencyInput\"\n          data-testid=\"currency-input\"\n          name=\"currency\"\n          onChange={ this.updateState }\n        >\n          <option> </option>\n          { currencies.map((item) => (\n            <option data-testid={ item } key={ item } value={ item }>{item}</option>)) }\n        </select>\n      </label>\n    );\n  }\n\n  renderMethodInput() {\n    const { expenses } = this.state;\n    const { method } = expenses;\n    return (\n      <label htmlFor=\"methodInput\">\n        { 'Method Payment ' }\n        <select\n          value={ method }\n          id=\"methodInput\"\n          data-testid=\"method-input\"\n          name=\"method\"\n          onChange={ this.updateState }\n        >\n          <option> </option>\n          <option value=\"Money\">Money</option>\n          <option value=\"Credit card\">Credit card</option>\n          <option value=\"Debit card\">Debit card</option>\n        </select>\n      </label>\n    );\n  }\n\n  renderTagInput() {\n    const { expenses } = this.state;\n    const { tag } = expenses;\n    return (\n      <label htmlFor=\"tagInput\">\n        { 'Tag '}\n        <select\n          value={ tag }\n          id=\"tagInput\"\n          data-testid=\"tag-input\"\n          name=\"tag\"\n          onChange={ this.updateState }\n        >\n          <option> </option>\n          <option value=\"Food\">Food</option>\n          <option value=\"Leisure\">Leisure</option>\n          <option value=\"Work\">Work</option>\n          <option value=\"Transport\">Transport</option>\n          <option value=\"Health\">Health</option>\n        </select>\n      </label>\n    );\n  }\n\n  renderDescriptionInput() {\n    const { expenses } = this.state;\n    const { description } = expenses;\n    return (\n      <label htmlFor=\"descriptionInput\">\n        { 'Description '}\n        <input\n          value={ description }\n          id=\"descriptionInput\"\n          type=\"text\"\n          data-testid=\"description-input\"\n          name=\"description\"\n          onChange={ this.updateState }\n        />\n      </label>\n    );\n  }\n\n  renderForm() {\n    return (\n      <div>\n        <form className=\"form-wallet\">\n          { this.renderValueInput() }\n          { this.renderCurrencyInput() }\n          { this.renderMethodInput() }\n          { this.renderTagInput() }\n          { this.renderDescriptionInput() }\n          <button\n            className=\"btn-form\"\n            onClick={ this.handleButton }\n            type=\"button\"\n          >\n            Add Expense\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  renderEdit() {\n    const { statusEdition } = this.props;\n    const { editingState } = this.state;\n    if (statusEdition && !editingState) this.updateEdit();\n    return (\n      <div>\n        <form className=\"form-edit\">\n          { this.renderValueInput() }\n          { this.renderCurrencyInput() }\n          { this.renderMethodInput() }\n          { this.renderTagInput() }\n          { this.renderDescriptionInput() }\n          <button\n            className=\"btn-form\"\n            type=\"button\"\n            onClick={ () => this.handleButtonEdit() }\n          >\n            Editar despesa\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    const { statusEdition } = this.props;\n    return (statusEdition) ? this.renderEdit() : this.renderForm();\n  }\n}\n\nFormAddWallet.propTypes = {\n  nextId: PropTypes.number.isRequired,\n  statusEdition: PropTypes.bool.isRequired,\n  idEdition: PropTypes.string.isRequired,\n  saveData: PropTypes.func.isRequired,\n  listExpenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  saveDataEdited: PropTypes.func.isRequired,\n  edition: PropTypes.func.isRequired,\n  setCurrencies: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormAddWallet);\n","import { constructObj, edition, editExpense, setCurrencies } from '../actions';\n\nexport const mapDispatchToProps = (dispatch) => ({\n  saveData: (value) => dispatch(constructObj(value)),\n  saveDataEdited: (id, value) => dispatch(editExpense(id, value)),\n  edition: (id, status) => dispatch(edition(id, status)),\n  setCurrencies: (array) => dispatch(setCurrencies(array)),\n});\n\nexport const mapStateToProps = (state) => ({\n  nextId: state.wallet.expenses\n    .reduce((_lastValue, currentValue) => currentValue.id + 1, 0),\n  listExpenses: state.wallet.expenses,\n  statusEdition: state.wallet.statusEdition,\n  idEdition: state.wallet.idEdition,\n  currencies: state.wallet.currencies,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport walletIcon from '../images/walletIcon.png';\n\nclass HeaderWallet extends React.Component {\n  sunTotal() {\n    const { listExpenses } = this.props;\n    return listExpenses\n      .reduce((total, currentValue) => (\n        total + Number(currentValue.value)\n        * Number(currentValue.exchangeRates[currentValue.currency].ask)\n      ), 0).toFixed(2);\n  }\n\n  render() {\n    const { email } = this.props;\n    if (email === '') return <Redirect to=\"/trybe-wallet\" />;\n    return (\n      <div className=\"header-wallet\">\n        <div className=\"container-walletIcon\">\n          <img className=\"img-walletIcon\" src={ walletIcon } alt=\"walletIcon\" />\n          <h1>Exchange Wallet</h1>\n        </div>\n        <div className=\"div-email-total\">\n          <p data-testid=\"email-field\">{email}</p>\n          <div className=\"div-total\">\n            <p className=\"element-total\">Expense total R$</p>\n            <p className=\"element-total total\" data-testid=\"total-field\">\n              { this.sunTotal() }\n            </p>\n            <p className=\"element-total\" data-testid=\"header-currency-field\">BRL</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeaderWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  listExpenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  listExpenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, null)(HeaderWallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { delExpense, edition } from '../actions';\n\nclass TableWallet extends React.Component {\n  renderTitleTable() {\n    return (\n      <tr className=\"tr-title\">\n        <th>Description</th>\n        <th>Tag</th>\n        <th>Method payment</th>\n        <th>Value</th>\n        <th>Currency</th>\n        <th>Exchange</th>\n        <th>Converted value</th>\n        <th>Conversion</th>\n        <th>Edit/Delete</th>\n      </tr>\n    );\n  }\n\n  renderExpense(expense) {\n    const { description, tag, method, value, currency, exchangeRates, id } = expense;\n    const { del, edit } = this.props;\n    return (\n      <tr className=\"tr-expense\" key={ id }>\n        <td>{description}</td>\n        <td>{tag}</td>\n        <td>{method}</td>\n        <td>{Number(value).toFixed(2)}</td>\n        <td>{exchangeRates[currency].name}</td>\n        <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n        <td>{Number(value * exchangeRates[currency].ask).toFixed(2)}</td>\n        <td>Real</td>\n        <td>\n          <button\n            onClick={ () => edit(id, true) }\n            className=\"btn-edit\"\n            type=\"button\"\n            data-testid=\"edit-btn\"\n          >\n            E\n          </button>\n          <button\n            onClick={ () => del(id) }\n            className=\"btn-del\"\n            type=\"button\"\n            data-testid=\"delete-btn\"\n          >\n            X\n          </button>\n        </td>\n      </tr>\n    );\n  }\n\n  renderLinesTable() {\n    const { listExpenses } = this.props;\n    return listExpenses.map((expense) => this.renderExpense(expense));\n  }\n\n  render() {\n    return (\n      <table className=\"container-table\">\n        { this.renderTitleTable() }\n        { this.renderLinesTable() }\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  listExpenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  del: (value) => dispatch(delExpense(value)),\n  edit: (id, status) => dispatch(edition(id, status)),\n});\n\nTableWallet.propTypes = {\n  listExpenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  del: PropTypes.func.isRequired,\n  edit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableWallet);\n","import React from 'react';\nimport FormAddWallet from '../Componentes/FormAddWallet';\nimport HeaderWallet from '../Componentes/HeaderWallet';\nimport TableWallet from '../Componentes/TableWallet';\nimport '../styles/wallet.css';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div>\n        <HeaderWallet />\n        <FormAddWallet />\n        <TableWallet />\n      </div>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\n\nclass NoPage extends React.Component {\n  render() {\n    return <h1>No Page Found</h1>;\n  }\n}\n\nexport default NoPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport NoPage from './pages/NoPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/trybe-wallet\" component={ Login } />\n      <Route exact path=\"/wallet\" component={ Wallet } />\n      <Route path=\"*\" component={ NoPage } />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}